#!/bin/bash

while true
do

# Logo

echo "============================================================"
curl -s https://raw.githubusercontent.com/StakeTake/script/main/logo.sh | bash
echo "============================================================"


PS3='Select an action: '
options=("Setup parametrs for bot" 
"Start bot"
"Exit")
select opt in "${options[@]}"
               do
                   case $opt in
                   
"Setup parametrs for bot")
echo "============================================================"
echo "Setup your node name"
echo "============================================================"
read NODENAME
echo 'export NODENAME='${NODENAME} >> $HOME/.bash_profile
echo "============================================================"
echo "Setup your Telegramm API"
echo "============================================================"
read API
echo 'export API='${API} >> $HOME/.bash_profile
echo "============================================================"
echo "Setup your Chat ID"
echo "============================================================"
read TG_ID
echo 'export TG_ID='${TG_ID} >> $HOME/.bash_profile
source $HOME/.bash_profile
break
;;
            
"Start bot")
echo "============================================================"
echo "Bot strating"
echo "============================================================"
RED_COLOR='\033[0;31m'
WITHOU_COLOR='\033[0m'
for (( ;; )); do

source $HOME/.bash_profile

# Node name, e.g. "Cosmos"
NODE_NAME=$NODENAME
# File name for saving parameters, e.g. "cosmos.log"
LOG_FILE="/root/alerot/node.log"
# Your node RPC address, e.g. "http://127.0.0.1:26657"
NODE_RPC="http://127.0.0.1:26657"
# Trusted node RPC address, e.g. "https://rpc.cosmos.network:26657"
SIDE_RPC="http://localhost:26657"
# Telegram bot API
TG_BOT=$API
# Telegram chat ID
TG_ID=$TG_ID
ip=$(wget -qO- eth0.me)


touch $LOG_FILE
REAL_BLOCK=$(curl -s "$SIDE_RPC/status" | jq '.result.sync_info.latest_block_height' | xargs )
STATUS=$(curl -s "$NODE_RPC/status")
CATCHING_UP=$(echo $STATUS | jq '.result.sync_info.catching_up')
LATEST_BLOCK=$(echo $STATUS | jq '.result.sync_info.latest_block_height' | xargs )
VOTING_POWER=$(echo $STATUS | jq '.result.validator_info.voting_power' | xargs )
ADDRESS=$(echo $STATUS | jq '.result.validator_info.address' | xargs )
source $LOG_FILE
#REAL_BLOCK=350000
#VOTING_POWER=0

echo 'LAST_BLOCK="'"$LATEST_BLOCK"'"' > $LOG_FILE
echo 'LAST_POWER="'"$VOTING_POWER"'"' >> $LOG_FILE

curl -s "$NODE_RPC/status"> /dev/null
if [[ $? -ne 0 ]]; then
    MSG="$ip node is stopped!!! ( узел остановлен )"
    MSG="$NODE_NAME $MSG"
    SEND=$(curl -s -X POST -H "Content-Type:multipart/form-data" "https://api.telegram.org/bot$TG_BOT/sendMessage?chat_id=$TG_ID&text=$MSG"); exit 1
fi


if [[ $LAST_POWER -ne $VOTING_POWER ]]; then
    DIFF=$(($VOTING_POWER - $LAST_POWER))
    if [[ $DIFF -gt 0 ]]; then
        DIFF="%2B$DIFF"
    fi
    MSG="$ip voting power changed ( размер стейка валидатора изменился ) $DIFF%0A($LAST_POWER -> $VOTING_POWER)"
fi

if [[ $LAST_BLOCK -ge $LATEST_BLOCK ]]; then

    MSG="$ip node is probably stuck at block (узел застрял в блоке номер>> ) $LATEST_BLOCK"
fi

if [[ $VOTING_POWER -lt 1 ]]; then
    MSG="$ip validator inactive\jailed ( валидатор не активен\в тюрьме ). Voting power $VOTING_POWER"
fi

if [[ $CATCHING_UP = "true" ]]; then
    MSG="$ip node is unsync, catching up ( узел находится в процессе синхронизации ). $LATEST_BLOCK -> $REAL_BLOCK"
fi

if [[ $REAL_BLOCK -eq 0 ]]; then
    MSG="$ip can't connect to ( пропало соединения с рпц нодой ) $SIDE_RPC"
fi

if [[ $MSG != "" ]]; then
    MSG="$NODE_NAME $MSG"
    SEND=$(curl -s -X POST -H "Content-Type:multipart/form-data" "https://api.telegram.org/bot$TG_BOT/sendMessage?chat_id=$TG_ID&text=$MSG")
fi
for (( timer=60; timer>0; timer-- ))
        do
                printf "* sleep for ${RED_COLOR}%02d${WITHOUT_COLOR} sec\r" $timer
                sleep 1
        done
done

break
;;

"Exit")
exit
;;

*) echo "invalid option $REPLY";;
esac
done
done
